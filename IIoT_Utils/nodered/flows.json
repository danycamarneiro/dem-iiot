[{"id":"f9e743a1ceef4a8f","type":"tab","label":"Start Up","disabled":false,"info":"","env":[]},{"id":"93995665844912f9","type":"mqtt in","z":"f9e743a1ceef4a8f","name":"Outside","topic":"#","qos":"0","datatype":"auto-detect","broker":"ea90c31cbed5a177","nl":false,"rap":true,"rh":0,"inputs":0,"x":1430,"y":740,"wires":[["a0375d55d96923c2","cbfb5cdcbf04cdb2"]]},{"id":"8eb042ede57f6d9a","type":"mqtt out","z":"f9e743a1ceef4a8f","name":"","topic":"","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"ea90c31cbed5a177","x":610,"y":520,"wires":[]},{"id":"20095eba44a43172","type":"function","z":"f9e743a1ceef4a8f","name":"Send data","func":"let hononame = flow.get(\"HonoName\")\nlet honopolicy = flow.get(\"HonoPolicy\")\nlet honodevice = flow.get(\"HonoDevice\")\n\nlet temp = Math.random()*100\nlet height = Math.random() * 100\n\nmsg.topic = \"ditto-tutorial/\"+hononame+\":\"+honodevice\nmsg.payload = {\n    \"topic\": hononame + \"/\" + honodevice+\"/things/twin/commands/modify\",\n    \"path\":\"/features\",\n    \"headers\":{},\n    \"value\": {\n        \"temp_sensor\": {\n            \"properties\": {\n                \"value\": temp\n            }\n        },\n        \"altitude\": {\n            \"properties\": {\n                \"value\": height\n            }\n        }\n    },\n    \"database\":[\"Influx\", \"Postgres\"]\n}\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":520,"wires":[["8eb042ede57f6d9a","14d75669d76898f7"]]},{"id":"f895b55dc5ef1e3e","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":520,"wires":[["20095eba44a43172"]]},{"id":"a0375d55d96923c2","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 1","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1600,"y":700,"wires":[]},{"id":"cb63392a33c22d8a","type":"comment","z":"f9e743a1ceef4a8f","name":"Ditto with MQTT","info":"","x":200,"y":440,"wires":[]},{"id":"d9a5c9165ecd0e3a","type":"comment","z":"f9e743a1ceef4a8f","name":"Interact with Ditto's API","info":"","x":200,"y":940,"wires":[]},{"id":"b90134b5d86f6053","type":"comment","z":"f9e743a1ceef4a8f","name":"Create policy","info":"","x":190,"y":980,"wires":[]},{"id":"c642f2b9ef233dc5","type":"function","z":"f9e743a1ceef4a8f","name":"Set Variables","func":"var Hono_IP = 'localhost'\nvar Hono_Port = 8080\nvar Hono_Namespace =\"mynamespace\"\nvar Hono_Policy = \"mypolicy\"\nvar Hono_User = \"ditto\"\nvar Hono_Pass = \"ditto\"\nvar Hono_Device = \"mydevice\"\nvar MosquittoUri = \"tcp://mosquitto:8883\"\nvar DevopsUser = \"devops\"\nvar DevopsPass = \"foobar\"\n\n\nflow.set(\"HonoIp\", Hono_IP)\nflow.set(\"HonoPort\", Hono_Port)\nflow.set(\"HonoName\", Hono_Namespace)\nflow.set(\"HonoPolicy\", Hono_Policy)\nflow.set(\"HonoUser\", Hono_User)\nflow.set(\"HonoPass\", Hono_Pass)\nflow.set(\"HonoDevice\",Hono_Device)\nflow.set(\"MosquittoUri\", MosquittoUri)\nflow.set(\"DevUser\",DevopsUser)\nflow.set(\"DevPass\",DevopsPass)","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":410,"y":60,"wires":[[]]},{"id":"f0b299ac9dca7e15","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":true,"onceDelay":"0.2","topic":"","payload":"","payloadType":"date","x":210,"y":60,"wires":[["c642f2b9ef233dc5"]]},{"id":"afd2ee07dee03391","type":"comment","z":"f9e743a1ceef4a8f","name":"Set Variables","info":"","x":190,"y":20,"wires":[]},{"id":"5ba7a1794fbb6222","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"0.2","topic":"","payload":"","payloadType":"date","x":200,"y":1020,"wires":[["2a6a829c23555444"]]},{"id":"2a6a829c23555444","type":"function","z":"f9e743a1ceef4a8f","name":"Create Policy","func":"let honousr = flow.get(\"HonoUser\")\nlet honopass = flow.get(\"HonoPass\")\nlet honoip = flow.get(\"HonoIp\")\nlet honoport = flow.get(\"HonoPort\")\nlet hononame = flow.get(\"HonoName\")\nlet honopolicy = flow.get(\"HonoPolicy\")\n\nlet aut_string = honousr+\":\"+honopass\nlet buff = new Buffer(aut_string)\nlet aut_string_b64 = buff.toString('base64')\n\nmsg.method = \"PUT\"\nmsg.url = \"http://\" + honoip+\":\"+ honoport + \"/api/2/policies/\" + hononame + \":\" + honopolicy\nmsg.headers={\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"Basic \" + aut_string_b64\n}\nmsg.payload = {\n    \"policyId\": hononame + \":\" + honopolicy,\n    \"entries\": {\n        \"owner\": {\n            \"subjects\": {\n                \"nginx:ditto\": {\n                    \"type\": \"nginx basic auth user\"\n                }\n            },\n            \"resources\": {\n                \"thing:/\": {\n                    \"grant\": [\"READ\", \"WRITE\"],\n                    \"revoke\": []\n                },\n                \"policy:/\": {\n                    \"grant\": [\"READ\", \"WRITE\"],\n                    \"revoke\": []\n                },\n                \"message:/\": {\n                    \"grant\": [\"READ\", \"WRITE\"],\n                    \"revoke\": []\n                }\n            }\n        },\n\n        \"observer\": {\n            \"subjects\": {\n                \"ditto:observer\": {\n                    \"type\": \"observer user\"\n                }\n            },\n            \"resources\": {\n                \"thing:/features\": {\n                    \"grant\": [\"READ\"],\n                    \"revoke\": []\n                },\n                \"policy:/\": {\n                    \"grant\": [\"READ\"],\n                    \"revoke\": []\n                },\n                \"message:/\": {\n                    \"grant\": [\"READ\"],\n                    \"revoke\": []\n                }\n            }\n        }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":390,"y":1020,"wires":[["b5ca5e43e2ce7488"]]},{"id":"b5ca5e43e2ce7488","type":"http request","z":"f9e743a1ceef4a8f","name":"","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":650,"y":1020,"wires":[["d77f15161a7b498b"]]},{"id":"d77f15161a7b498b","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 2","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":820,"y":1020,"wires":[]},{"id":"914fa4a043d67551","type":"comment","z":"f9e743a1ceef4a8f","name":"Create Device","info":"","x":190,"y":1080,"wires":[]},{"id":"e5799aea1c436d03","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"0.2","topic":"","payload":"","payloadType":"date","x":200,"y":1120,"wires":[["42173fe6a002da19"]]},{"id":"42173fe6a002da19","type":"function","z":"f9e743a1ceef4a8f","name":"Create Device","func":"let honousr = flow.get(\"HonoUser\")\nlet honopass = flow.get(\"HonoPass\")\nlet honoip = flow.get(\"HonoIp\")\nlet honoport = flow.get(\"HonoPort\")\nlet hononame = flow.get(\"HonoName\")\nlet honopolicy = flow.get(\"HonoPolicy\")\nlet honodevice = flow.get(\"HonoDevice\")\n\nlet aut_string = honousr+\":\"+honopass\nlet buff = new Buffer(aut_string)\nlet aut_string_b64 = buff.toString('base64')\n\nmsg.method = \"PUT\"\nmsg.url = \"http://\" + honoip + \":\" + honoport + \"/api/2/things/\" + hononame + \":\" + honodevice\nmsg.headers={\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"Basic \" + aut_string_b64\n}\nmsg.payload = {\n    \"policyId\": hononame + \":\" + honopolicy,\n    \"attributes\": {\n        \"name\": honodevice,\n        \"type\": \"dummy device\"\n    },\n    \"features\": {\n        \"temp_sensor\": {\n            \"properties\": {\n                \"value\": 0\n            }\n        },\n        \"altitude\": {\n            \"properties\": {\n                \"value\": 0\n            }\n        }\n    }\n}\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":400,"y":1120,"wires":[["cfd25d87807dab69"]]},{"id":"cfd25d87807dab69","type":"http request","z":"f9e743a1ceef4a8f","name":"","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":650,"y":1120,"wires":[["d7f29140f3b9e81a"]]},{"id":"d7f29140f3b9e81a","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 3","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":820,"y":1120,"wires":[]},{"id":"6ada90cee9f9ca19","type":"comment","z":"f9e743a1ceef4a8f","name":"Create MQTT connection (only 1 time)","info":"","x":270,"y":1180,"wires":[]},{"id":"4eb970567f566439","type":"http request","z":"f9e743a1ceef4a8f","name":"","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":710,"y":1220,"wires":[["c87724da9aa61321"]]},{"id":"c87724da9aa61321","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 4","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":940,"y":1220,"wires":[]},{"id":"3e01aa4b7cea7632","type":"comment","z":"f9e743a1ceef4a8f","name":"Send","info":"","x":190,"y":480,"wires":[]},{"id":"5fe9918f0d148269","type":"comment","z":"f9e743a1ceef4a8f","name":"Receive","info":"","x":200,"y":560,"wires":[]},{"id":"700c3340b2716b1e","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"0.2","topic":"","payload":"","payloadType":"date","x":1180,"y":1080,"wires":[["7108dcc22bf3f774"]]},{"id":"7108dcc22bf3f774","type":"function","z":"f9e743a1ceef4a8f","name":"DELETE MQTT Connection","func":"let devusr = flow.get(\"DevUser\")\nlet devpass = flow.get(\"DevPass\")\nlet honoip = flow.get(\"HonoIp\")\nlet honoport = flow.get(\"HonoPort\")\nlet hononame = flow.get(\"HonoName\")\nlet honopolicy = flow.get(\"HonoPolicy\")\nlet honodevice = flow.get(\"HonoDevice\")\nlet mosquittourio = flow.get(\"MosquittoUri\")\n\nlet aut_string = devusr+\":\"+devpass\nlet buff = new Buffer(aut_string)\nlet aut_string_b64 = buff.toString('base64')\n\nmsg.method = \"DELETE\"\nmsg.url = \"http://\" + honoip + \":\" + honoport + \"/api/2/connections/mqtt-example-connection-123\"\nmsg.headers={\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"Basic \" + aut_string_b64\n}\n\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1420,"y":1080,"wires":[["35c75c8a08fd6b1f"]]},{"id":"35c75c8a08fd6b1f","type":"http request","z":"f9e743a1ceef4a8f","name":"","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":1630,"y":1080,"wires":[["885c11229ca1ab40"]]},{"id":"885c11229ca1ab40","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 5","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1800,"y":1080,"wires":[]},{"id":"14d75669d76898f7","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 6","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":580,"y":480,"wires":[]},{"id":"ace1e4b452173114","type":"mqtt in","z":"f9e743a1ceef4a8f","name":"","topic":"ditto-tutorial/mynamespace:mydevice","qos":"0","datatype":"auto-detect","broker":"ea90c31cbed5a177","nl":false,"rap":true,"rh":0,"inputs":0,"x":290,"y":620,"wires":[["e448003fe446d9cd"]]},{"id":"e448003fe446d9cd","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 7","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":580,"y":620,"wires":[]},{"id":"8e48e7c3cd6a48e9","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"0.2","topic":"","payload":"","payloadType":"date","x":200,"y":1220,"wires":[["330a863a338dbe4b"]]},{"id":"330a863a338dbe4b","type":"function","z":"f9e743a1ceef4a8f","name":"Create MQTT Connection","func":"let devusr = flow.get(\"DevUser\")\nlet devpass = flow.get(\"DevPass\")\nlet honoip = flow.get(\"HonoIp\")\nlet honoport = flow.get(\"HonoPort\")\nlet hononame = flow.get(\"HonoName\")\nlet honopolicy = flow.get(\"HonoPolicy\")\nlet honodevice = flow.get(\"HonoDevice\")\nlet mosquittourio = flow.get(\"MosquittoUri\")\n\nlet aut_string = devusr+\":\"+devpass\nlet buff = new Buffer(aut_string)\nlet aut_string_b64 = buff.toString('base64')\n\nmsg.method = \"POST\"\nmsg.url = \"http://\" + honoip + \":\" + honoport + \"/devops/piggyback/connectivity?timeout=10\"\nmsg.headers={\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"Basic \" + aut_string_b64\n}\nmsg.payload = {\n    \"targetActorSelection\": \"/system/sharding/connection\",\n    \"headers\": {\n        \"aggregate\": false\n    },\n    \"piggybackCommand\": {\n        \"type\": \"connectivity.commands:createConnection\",\n        \"connection\": {\n            \"id\": \"mqtt-example-connection-1234\",\n            \"connectionType\": \"mqtt\",\n            \"connectionStatus\": \"open\",\n            \"failoverEnabled\": true,\n            \"uri\": \"tcp://MosquittoInternal:1883\",\n            \"sources\": [{\n                \"addresses\": [\"ditto-tutorial/#\"],\n                \"authorizationContext\": [\"nginx:ditto\"],\n                \"qos\": 0,\n                \"filters\": []\n            }],\n            \"targets\": [{\n                \"address\": \"ditto-tutorial/{{ thing:id }}\",\n                \"topics\": [\n                    \"_/_/things/twin/events\",\n                    \"_/_/things/live/messages\"\n                ],\n                \"authorizationContext\": [\"nginx:ditto\"],\n                \"qos\": 0\n            }]\n        }\n    }\n}\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":430,"y":1220,"wires":[["4eb970567f566439"]]},{"id":"1b3459b0ac51da05","type":"mqtt out","z":"f9e743a1ceef4a8f","name":"","topic":"","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"e9fe935dc06e250b","x":1190,"y":520,"wires":[]},{"id":"0709730848d678cb","type":"function","z":"f9e743a1ceef4a8f","name":"Send data","func":"let hononame = flow.get(\"HonoName\")\nlet honopolicy = flow.get(\"HonoPolicy\")\nlet honodevice = flow.get(\"HonoDevice\")\n\nlet temp = Math.random()*100\n\nmsg.topic = \"ditto-tutorial/\"+hononame+\":\"+honodevice\nmsg.payload = {\n    \"topic\": hononame + \"/\" + honodevice+\"/things/twin/commands/modify\",\n    \"path\":\"/features/temp_sensor\",\n    \"headers\":{},\n    \"value\": {\n        \"properties\": {\n            \"value\": temp\n        }\n    }\n}\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":1010,"y":520,"wires":[["1b3459b0ac51da05","91b9762401e2ec7b"]]},{"id":"d8c92178b7ba6f79","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":800,"y":520,"wires":[["0709730848d678cb"]]},{"id":"e833b325ac06797d","type":"comment","z":"f9e743a1ceef4a8f","name":"Send 1 feature","info":"","x":820,"y":480,"wires":[]},{"id":"91b9762401e2ec7b","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 18","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1200,"y":480,"wires":[]},{"id":"64013ce843e663c7","type":"mqtt in","z":"f9e743a1ceef4a8f","name":"","topic":"ditto-tutorial/mynamespace:mydevice2","qos":"0","datatype":"auto-detect","broker":"e88fe53d8fcb5aa8","nl":false,"rap":true,"rh":0,"inputs":0,"x":290,"y":680,"wires":[["1eee68e0ecf3e250"]]},{"id":"1eee68e0ecf3e250","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 19","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":580,"y":680,"wires":[]},{"id":"52100b75deb4fa28","type":"comment","z":"f9e743a1ceef4a8f","name":" Advanced: Interact with Ditto's API","info":"","x":1240,"y":980,"wires":[]},{"id":"dc59d56717c06e91","type":"comment","z":"f9e743a1ceef4a8f","name":"Delete MQTT connection","info":"","x":1210,"y":1040,"wires":[]},{"id":"32be0fa73bb47c38","type":"http request","z":"f9e743a1ceef4a8f","name":"","method":"use","ret":"txt","paytoqs":"ignore","url":"","tls":"","persist":false,"proxy":"","insecureHTTPParser":false,"authType":"","senderr":false,"headers":[],"x":730,"y":1260,"wires":[["8a2feb90e50ec2f2"]]},{"id":"8a2feb90e50ec2f2","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 20","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":940,"y":1260,"wires":[]},{"id":"b172c75427bf7c90","type":"function","z":"f9e743a1ceef4a8f","name":"Create MQTT Connection cert","func":"let devusr = flow.get(\"DevUser\")\nlet devpass = flow.get(\"DevPass\")\nlet honoip = flow.get(\"HonoIp\")\nlet honoport = flow.get(\"HonoPort\")\nlet hononame = flow.get(\"HonoName\")\nlet honopolicy = flow.get(\"HonoPolicy\")\nlet honodevice = flow.get(\"HonoDevice\")\nlet mosquittourio = flow.get(\"MosquittoUri\")\nlet ca_cert = flow.get(\"ca_cert\")\nlet client_cert = flow.get(\"client_cert\")\nlet client_key = flow.get(\"client_key\")\n\n\nlet aut_string = devusr+\":\"+devpass\nlet buff = new Buffer(aut_string)\nlet aut_string_b64 = buff.toString('base64')\n\nmsg.method = \"POST\"\nmsg.url = \"http://\" + honoip + \":\" + honoport + \"/devops/piggyback/connectivity?timeout=10\"\nmsg.headers={\n    \"Content-Type\": \"application/json\",\n    \"Authorization\": \"Basic \" + aut_string_b64\n}\nmsg.payload = {\n    \"targetActorSelection\": \"/system/sharding/connection\",\n    \"headers\": {\n        \"aggregate\": false\n    },\n    \"piggybackCommand\": {\n        \"type\": \"connectivity.commands:createConnection\",\n        \"connection\": {\n            \"id\": \"mqtt-example-connection-1234\",\n            \"name\": \"mqtt_master_bridge\",\n            \"connectionType\": \"mqtt\",\n            \"connectionStatus\": \"open\",\n            \"failoverEnabled\": true,\n            \"uri\": \"ssl://mosquitto:8883\",\n            \"ca\": ca_cert,\n            \"credentials\": {\n                \"type\": \"client-cert\",\n                \"cert\": client_cert,\n                \"key\": client_key\n            },\n            \"sources\": [{\n                \"addresses\": [\"ditto-tutorial/#\"],\n                \"authorizationContext\": [\"nginx:ditto\"],\n                \"qos\": 0,\n                \"filters\": []\n            }],\n            \"targets\": [{\n                \"address\": \"ditto-tutorial/{{ thing:id }}\",\n                \"topics\": [\n                    \"_/_/things/twin/events\",\n                    \"_/_/things/live/messages\"\n                ],\n                \"authorizationContext\": [\"nginx:ditto\"],\n                \"qos\": 0\n            }]\n        }\n    }\n}\n\nreturn msg;","outputs":1,"timeout":"","noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":1260,"wires":[["32be0fa73bb47c38"]]},{"id":"cf9d22225e8ef623","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":"0.2","topic":"","payload":"","payloadType":"date","x":200,"y":1260,"wires":[["b172c75427bf7c90"]]},{"id":"1f86eefcb0dba4bc","type":"function","z":"f9e743a1ceef4a8f","name":"ca cert","func":"flow.set(\"ca_cert\", msg.payload)\n\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":650,"y":160,"wires":[[]]},{"id":"62dc22dfe033530a","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 21","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":660,"y":120,"wires":[]},{"id":"567b6ffb06932c7f","type":"function","z":"f9e743a1ceef4a8f","name":"function 1","func":"flow.set(\"client_cert\", msg.payload)\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":320,"wires":[[]]},{"id":"52a5ae1837439b2e","type":"function","z":"f9e743a1ceef4a8f","name":"function 2","func":"flow.set(\"client_key\", msg.payload)","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":660,"y":400,"wires":[[]]},{"id":"fb16ef138a11021b","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 22","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":660,"y":280,"wires":[]},{"id":"98e848fdfe6cadf1","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 23","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":660,"y":360,"wires":[]},{"id":"631ab3391e06e642","type":"file in","z":"f9e743a1ceef4a8f","name":"cli cert path","filename":"C:\\Users\\Daniel\\OneDrive - Universidade de Aveiro\\IIoTPlatform\\certs\\mosquitto\\client2.crt","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":390,"y":340,"wires":[["567b6ffb06932c7f","fb16ef138a11021b"]]},{"id":"2b7edf0618b87026","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":340,"wires":[["631ab3391e06e642"]]},{"id":"0914b5ca86d788b7","type":"file in","z":"f9e743a1ceef4a8f","name":"cli key path","filename":"C:\\Users\\Daniel\\OneDrive - Universidade de Aveiro\\IIoTPlatform\\certs\\mosquitto\\client2.key","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":390,"y":380,"wires":[["52a5ae1837439b2e","98e848fdfe6cadf1"]]},{"id":"d2323298627bf691","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":380,"wires":[["0914b5ca86d788b7"]]},{"id":"3d7f1e4f7b434066","type":"inject","z":"f9e743a1ceef4a8f","name":"","props":[{"p":"payload"},{"p":"topic","vt":"str"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"","payloadType":"date","x":200,"y":140,"wires":[["19c30ebf6ee3c0d0"]]},{"id":"19c30ebf6ee3c0d0","type":"file in","z":"f9e743a1ceef4a8f","name":"ca cert path","filename":"C:\\Users\\Daniel\\OneDrive - Universidade de Aveiro\\IIoTPlatform\\certs\\mosquitto\\ca.crt","filenameType":"str","format":"utf8","chunk":false,"sendError":false,"encoding":"none","allProps":false,"x":390,"y":140,"wires":[["1f86eefcb0dba4bc","62dc22dfe033530a"]]},{"id":"3f9983a1710d20f8","type":"mqtt in","z":"f9e743a1ceef4a8f","name":"Inside","topic":"#","qos":"0","datatype":"auto-detect","broker":"5fe6ddb98f1dad0b","nl":false,"rap":true,"rh":0,"inputs":0,"x":1430,"y":560,"wires":[["03006a09bddecd8f","b753af0b399bdd8f"]]},{"id":"27f07919a8ae2a62","type":"comment","z":"f9e743a1ceef4a8f","name":"Mosquitto's bridge","info":"","x":1430,"y":480,"wires":[]},{"id":"e400eae1046df498","type":"comment","z":"f9e743a1ceef4a8f","name":"In-out","info":"","x":1430,"y":520,"wires":[]},{"id":"59f9463d26034e81","type":"comment","z":"f9e743a1ceef4a8f","name":"out-in","info":"","x":1430,"y":700,"wires":[]},{"id":"c7e775e4599e1a6d","type":"mqtt out","z":"f9e743a1ceef4a8f","d":true,"name":"to_inside","topic":"","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"5fe6ddb98f1dad0b","x":1820,"y":760,"wires":[]},{"id":"03006a09bddecd8f","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 24","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1620,"y":520,"wires":[]},{"id":"1753ea484df789c3","type":"mqtt out","z":"f9e743a1ceef4a8f","d":true,"name":"to_outside","topic":"","qos":"0","retain":"false","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"ea90c31cbed5a177","x":1830,"y":580,"wires":[]},{"id":"cbfb5cdcbf04cdb2","type":"function","z":"f9e743a1ceef4a8f","name":"Add source","func":"if (msg.payload.check  != true){\n    msg.payload.check = true\n    return msg;\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":760,"wires":[["c7e775e4599e1a6d","05bf4b1a372994c4"]]},{"id":"05bf4b1a372994c4","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 25","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1820,"y":700,"wires":[]},{"id":"b753af0b399bdd8f","type":"function","z":"f9e743a1ceef4a8f","name":"Add source","func":"if (msg.payload.check  != true){\n    msg.payload.check = true\n    return msg;\n}\n","outputs":1,"timeout":0,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1630,"y":580,"wires":[["1753ea484df789c3","12a7437254b3212e"]]},{"id":"12a7437254b3212e","type":"debug","z":"f9e743a1ceef4a8f","name":"debug 26","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","statusVal":"","statusType":"auto","x":1820,"y":520,"wires":[]},{"id":"ea90c31cbed5a177","type":"mqtt-broker","name":"master_outside","broker":"localhost","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"e9fe935dc06e250b","type":"mqtt-broker","name":"ssl_test","broker":"localhost","port":"8883","tls":"3a20ad342d73e318","clientid":"","autoConnect":true,"usetls":true,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"e88fe53d8fcb5aa8","type":"mqtt-broker","name":"device1","broker":"localhost","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"5fe6ddb98f1dad0b","type":"mqtt-broker","name":"master_inside","broker":"localhost","port":"2000","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"autoUnsubscribe":true,"birthTopic":"","birthQos":"0","birthRetain":"false","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closeRetain":"false","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willRetain":"false","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"3a20ad342d73e318","type":"tls-config","name":"localssl","cert":"","key":"","ca":"","certname":"client.crt","keyname":"client.key","caname":"ca.crt","servername":"","verifyservercert":false,"alpnprotocol":""}]